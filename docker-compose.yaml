---
version: '3.4'

x-common-airflow:
  &common-airflow
  build:
    context: .
    dockerfile: ./docker/Dockerfile.airflow
  user: "${AIRFLOW_UID}:0"
  env_file:
    - ./env_files/airflow.env
    - ./env_files/mlflow.env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./scripts:/opt/airflow/scripts
  depends_on:
    postgres:
      condition: service_healthy

services:
  mlflow:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.mlflow
    container_name: mlflow
    ports:
        - "90:90"
    volumes:
      - ./mlflow:/opt/mlflow/artifacts
    env_file:
      - ./env_files/mlflow.env
      - ./env_files/mlflow.postgres.env
    depends_on:
      postgresql:
        condition: service_healthy
    command: bash /tmp/start_mlflow.sh

  postgresql:
    image: postgres:13
    container_name: postgresql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    env_file:
      - ./env_files/mlflow.postgres.env

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    env_file:
      - ./env_files/airflow.env

  scheduler:
    <<: *common-airflow
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    depends_on:
      - airflow-init

  webserver:
    <<: *common-airflow
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    depends_on:
      - airflow-init

  airflow-init:
    <<: *common-airflow
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version